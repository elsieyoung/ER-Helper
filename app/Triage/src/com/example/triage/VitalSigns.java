package com.example.triage;

import java.io.Serializable;

public class VitalSigns implements Serializable {
	/**
	 * This class is designed for each vital signs object for a single patient.
	 * Inside, we can store a patient's systolic, diastolic and temperature and
	 * heart rate. Record time is also stored.
	 */

	/**
	 * This UID was generated by Eclipse.
	 */
	private static final long serialVersionUID = 6734616685648613787L;

	/** Visit ID shows which visit this vital sign belongs to */
	private int visitId;

	/** The systolic in VitalSigns of a Patient. */
	private int systolic;

	/** The diastolic in VitalSigns of a Patient. */
	private int diastolic;

	/** The temperature in VitalSigns of a Patient. */
	private double temperature;

	/** The heart rate in VitalSigns of a Patient. */
	private int heartRate;

	/** The record time of this vital signs in format yyyy:MM:dd HH:mm:ss. */
	private String recordTime;

	/** The urgency level of this Patient. */
	private String urgency;

	/** The urgency point of this Patient. */
	private int urgencyPoint;

	/**
	 * An empty constructor for a VitalSigns.
	 */
	public VitalSigns() {
	}

	/**
	 * Constructs a VitalSigns with blood pressure, temperature and heart rate
	 * and record time.
	 * 
	 * @param systolic
	 *            The systolic of this VitalSigns record.
	 * @param diastolic
	 *            The diastolic of this VitalSigns record.
	 * @param temperature
	 *            The temperature of this VitalSigns record.
	 * @param heartRate
	 *            The heartRate of this VitalSigns record.
	 * @param recordTime
	 *            The time of record of this VitalSigns record.
	 * @param age
	 *            The age of this the patient.
	 */
	public VitalSigns(int systolic, int diastolic, float temperature,
			int heartRate, String recordTime, int age) {
		this.setSystolic(systolic);
		this.setDiastolic(diastolic);
		this.setTemperature(temperature);
		this.setHeartRate(heartRate);
		this.setRecordTime(recordTime);
		this.setUrgency(age, temperature, systolic, diastolic, heartRate);
	}
	
	

	/**
	 * Returns this Patient's visitId in this visit record
	 * 
	 * @return The visit ID of this certain visit of this Patient
	 */
	public int getVisitId() {
		return visitId;
	}

	/**
	 * Sets the visitId of this Visit to visitId
	 * 
	 * @param visitId
	 *            The visit ID of this Visit.
	 */
	public void setVisitId(int visitId) {
		this.visitId = visitId;
	}

	/**
	 * Returns this Patient's systolic.
	 * 
	 * @return The systolic of this Patient.
	 */
	public int getSystolic() {
		return systolic;
	}

	/**
	 * Sets the systolic in VitalSigns.
	 * 
	 * @param systolic
	 *            The new systolic of the Patient.
	 */
	public void setSystolic(int systolic) {
		this.systolic = systolic;
	}

	/**
	 * Returns this Patient's diastolic.
	 * 
	 * @return The diastolic of this Patient.
	 */
	public int getDiastolic() {
		return diastolic;
	}

	/**
	 * Sets the diastolic in VitalSigns.
	 * 
	 * @param diastolic
	 *            The new diastolic of the Patient.
	 */
	public void setDiastolic(int diastolic) {
		this.diastolic = diastolic;
	}

	/**
	 * Returns this Patient's temperature.
	 * 
	 * @return The temperature of this Patient.
	 */
	public double getTemperature() {
		return temperature;
	}

	/**
	 * Sets the temperature in VitalSigns.
	 * 
	 * @param temperature
	 *            The new temperature of the Patient.
	 */
	public void setTemperature(float temperature) {
		this.temperature = temperature;
	}

	/**
	 * Returns this Patient's heart rate.
	 * 
	 * @return The heart rate of this Patient.
	 */
	public int getHeartRate() {
		return heartRate;
	}

	/**
	 * Sets the heart rate in VitalSigns.
	 * 
	 * @param heartRate
	 *            The new heart rate of the Patient.
	 */
	public void setHeartRate(int heartRate) {
		this.heartRate = heartRate;
	}

	/**
	 * Returns the record time of this VitalSigns.
	 * 
	 * @return The record time of this VitalSigns.
	 */
	public String getRecordTime() {
		return recordTime;
	}

	/**
	 * Sets the record time in VitalSigns.
	 * 
	 * @param recordTime
	 *            The record time of new vital signs.
	 */
	public void setRecordTime(String recordTime) {
		this.recordTime = recordTime.substring(0, 4) + "-"
				+ recordTime.substring(5, 7) + "-"
				+ recordTime.substring(8, 10) + " "
				+ recordTime.substring(11, 13) + ":"
				+ recordTime.substring(14, 16) + ":" + recordTime.substring(17);
	}

	/**
	 * Returns the urgency of this VitalSigns.
	 * 
	 * @return The urgency of this VitalSigns.
	 */
	public String getUrgency() {
		return urgency;
	}

	public void setUrgency(int age, double temperature, int systolic,
			int diastolic, int heartRate) {
		this.urgency = calculateUrgency(age);
	}

	/**
	 * Return the urgency point of this VitalSign
	 * 
	 * @return
	 */
	public int getUrgencyPoint() {
		return urgencyPoint;
	}

	/**
	 * Sets the urgency point in VitalSigns
	 * 
	 * @param urgencyPoint
	 */
	public void setUrgencyPoint(int urgencyPoint) {
		this.urgencyPoint = urgencyPoint;
	}

	/**
	 * Returns a string representation of vital signs.
	 * 
	 * @return A string representation of VitalSigns.
	 */
	public String toString() {

		return "Record on " + this.recordTime + ":" + "\n"
				+ "\nSystolic:                     " + this.systolic + "\n"
				+ "\nDiastolic:                    " + this.diastolic + "\n"
				+ "\nTemperature:            " + this.temperature + "\n"
				+ "\nHeart Rate:                 " + this.heartRate + "\n";
	}

	/**
	 * Calculates the urgency level according to the hospital policy.
	 * 
	 * @param age
	 *            The age of this Patient.
	 * @param temperature
	 *            The temperature of this Patient in this VitalSigns record.
	 * @param systolic
	 *            The systolic of this Patient in this VitalSigns record.
	 * @param diastolic
	 *            The diastolic of this Patient in this VitalSigns record.
	 * @param heartRate
	 *            The heartRate of this Patient in this VitalSigns record.
	 * @return The urgency level of this Patient.
	 */
	public String calculateUrgency(int age) {
		int point = 0;
		String urgent = "";
		if (age < 2) {
			point++;
		}
		if (temperature > 39.0) {
			point++;
		}
		if (systolic >= 140 || diastolic >= 90) {
			point++;
		}
		if (heartRate >= 100 || heartRate <= 50) {
			point++;
		}
		if (point <= 1) {
			urgent = "Non Urgent";
			setUrgencyPoint(1);
		}
		if (point == 2) {
			urgent = "Less Urgent";
			setUrgencyPoint(2);
		}
		if (point == 3) {
			urgent = "Urgent";
			setUrgencyPoint(3);
		}
		if (point == 4) {
			urgent = "Urgent";
			setUrgencyPoint(4);
		}
		return urgent;
	}
}
