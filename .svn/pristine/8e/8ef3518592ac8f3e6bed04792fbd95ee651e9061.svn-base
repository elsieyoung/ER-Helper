package com.example.triage;

import java.io.Serializable;
import java.util.ArrayList;

public class Visit implements Serializable {
	/**
	 * This class is designed for each visit object of a patient object. Inside,
	 * we can store a patient's arrival time and a collection of his/her vital
	 * signs in each visit. DataManager class can access the addVitalSigns
	 * method in this class to add new vital signs.
	 */

	/**
	 * This UID was generated by Eclipse.
	 */
	private static final long serialVersionUID = -6790297289314428912L;

	/** Unique Visit ID generated by SQL database (AUTOINCREMENT) */
	private int visitId;

	/** PatientID shows whose visit this belongs to */
	private int patientId;

	/** The arrival time of a patient in format yyyy:MM:dd HH:mm:ss. */
	private String arrivalTime;

	/** A collection of VitalSigns at different time in this Visit record. */
	private ArrayList<VitalSigns> vitalData = new ArrayList<VitalSigns>();

	/** A collection of Patient's Prescription information. */
	private ArrayList<Prescription> prescription = new ArrayList<Prescription>();

	/**
	 * The time when this patient has been seen by the doctor in format
	 * yyyy:MM:dd HH:mm:ss.
	 */
	private String timeSeenByDoc;

	/** Whether this patient has been seen by the doctor. */
	private boolean seenByDoc;

	/**
	 * An empty constructor for a Visit.
	 */
	public Visit() {
	}

	/**
	 * Constructs a Visit with arrival time from Patient.
	 * 
	 * @param arrivalTime
	 *            The time of record of this Visit record.
	 */
	public Visit(String arrivalTime) {
		this.setArrivalTime(arrivalTime);
		this.setTimeSeenByDoc(timeSeenByDoc);
	}

	/**
	 * Constructs a Visit with arrival time from Patient. Additionally with
	 * visitId and patientId
	 * 
	 * @param arrivalTime
	 *            The time of record of this Visit record
	 * @param visitId
	 *            The visit Id of this visit
	 * @param patientId
	 *            The patient Id of this visit
	 */
	public Visit(String arrivalTime, int visitId, int patientId) {
		this.setVisitId(visitId);
		this.setPatientId(patientId);
		this.setArrivalTime(arrivalTime);
		this.setTimeSeenByDoc(timeSeenByDoc);
	}

	/**
	 * Returns this Patient's visitId in this visit record
	 * 
	 * @return The visit ID of this certain visit of this Patient
	 */
	public int getVisitId() {
		return visitId;
	}

	/**
	 * Sets the visitId of this Visit to visitId
	 * 
	 * @param visitId
	 *            The visit ID of this Visit.
	 */
	public void setVisitId(int visitId) {
		this.visitId = visitId;
	}

	/**
	 * Returns this Patient's patientId
	 * 
	 * @return patientId The patient ID of this Patient
	 */
	public int getPatientId() {
		return patientId;
	}

	/**
	 * Sets the patientId of this Patient
	 * 
	 * @param patientId
	 *            The patient ID of this visit.
	 */
	public void setPatientId(int patientId) {
		this.patientId = patientId;
	}

	/**
	 * Returns this Patient's arrivalTime in this Visit record.
	 * 
	 * @return The arrival time of this Patient.
	 */
	public String getArrivalTime() {
		return arrivalTime;
	}

	/**
	 * Sets the arrival time of this Visit to arrivalTime.
	 * 
	 * @param arrivalTime
	 *            The new arrivalTime of this Visit.
	 */
	public void setArrivalTime(String arrivalTime) {
		this.arrivalTime = arrivalTime.substring(0, 4) + "-"
				+ arrivalTime.substring(5, 7) + "-"
				+ arrivalTime.substring(8, 10) + " "
				+ arrivalTime.substring(11, 13) + ":"
				+ arrivalTime.substring(14, 16) + ":"
				+ arrivalTime.substring(17);
		;
	}

	/**
	 * Returns this Patient's consultation time.
	 * 
	 * @return The consultation time of this Patient.
	 */
	public String getTimeSeenByDoc() {
		return timeSeenByDoc;
	}

	/**
	 * Sets the consultation time of this Patient to timeSeenByDoc.
	 * 
	 * @param timeSeenByDoc
	 *            The new consultation time of this Patient.
	 */
	public void setTimeSeenByDoc(String timeSeenByDoc) {
		if (timeSeenByDoc == null) {
			this.timeSeenByDoc = "The patient has not been seen by the doctor.";
		} else {
			this.timeSeenByDoc = timeSeenByDoc.substring(0, 4) + "-"
					+ timeSeenByDoc.substring(5, 7) + "-"
					+ timeSeenByDoc.substring(8, 10) + " "
					+ timeSeenByDoc.substring(11, 13) + ":"
					+ timeSeenByDoc.substring(14, 16) + ":"
					+ timeSeenByDoc.substring(17);
			this.setSeenByDoc(true);
		}
	}

	/**
	 * Returns whether this Patient has been seen by the doctor.
	 * 
	 * @return A boolean representing whether this Patient has been seen by the
	 *         doctor.
	 */
	public boolean isSeenByDoc() {
		return seenByDoc;
	}

	/**
	 * Sets the boolean if this Patient has been seen by the doctor.
	 * 
	 * @param seenByDoc
	 *            The new boolean representing this Patient has been seen by the
	 *            doctor.
	 */
	public void setSeenByDoc(boolean seenByDoc) {
		this.seenByDoc = seenByDoc;
	}

	/**
	 * Sets the boolean of whether this Patient has been seen by the doctor. The
	 * default setting of the boolean is false.
	 */
	public void setSeenByDoc() {
		this.seenByDoc = false;
	}

	/**
	 * Returns this Patient's prescription.
	 * 
	 * @return The prescription of this Patient.
	 */
	public ArrayList<Prescription> getPrescription() {

		return prescription;
	}

	/**
	 * Sets the prescription of this Patient.
	 * 
	 * @param medication
	 *            The name of medication to be added to the Prescription.
	 * @param instruction
	 *            The instruction of medication to be added to the Prescription.
	 */
	public void setPrescription(String medication, String instruction) {
		Prescription p = new Prescription(medication, instruction);
		this.prescription.add(p);
	}

	/**
	 * Sets the prescription of this Patient
	 * 
	 * @param prescription
	 *            Prescription class
	 */
	public void setPrescription(ArrayList<Prescription> prescription) {
		this.prescription = prescription;
	}

	/**
	 * Returns this Visit's VitalData.
	 * 
	 * @return The vital signs data of this Visit.
	 */
	public ArrayList<VitalSigns> getVitalData() {
		return vitalData;
	}

	/**
	 * Sets the VitalData of this Visit.
	 * 
	 * @param vitalData
	 *            The new VitalSigns to be added to the Visit.
	 */
	public void setVitalData(ArrayList<VitalSigns> vitalData) {
		this.vitalData = vitalData;
	}

	/**
	 * Returns a string representation of visit.
	 * 
	 * @return A string representation of Visit.
	 */
	public String toString() {
		return "Visit on " + this.arrivalTime + "\nVital Signs:"
				+ listToString(vitalData);
	}

	public static String listToString(ArrayList<VitalSigns> list) {
		String result = "";
		for (VitalSigns vs : list) {
			result += vs.toString();

		}
		return result;
	}

	/**
	 * Adds vital signs to this Visit.
	 * 
	 * @param vs
	 *            The new VitalSigns to be added in this Visit.
	 */
	public void addVitalsigns(VitalSigns vs) {
		if (this.vitalData == null) {
			this.vitalData = new ArrayList<VitalSigns>();
		}

		this.vitalData.add(vs);
	}

}