We are asked to design an application to collect patient data and perform triage for hospital emergency room. We plan to use six classes:
-Data: the class to store all patients’ records. To order the list of patients in a more efficient way, the collection of patients is made to be a map whose keys are ‘seen by doctor’ and ‘not seen by doctor’ with values of corresponding patient objects. The values of this collection are saved into two text files separated by keys. When the user launches the application, all the records can be read from the files. When the user updates the records, the changes can be made in the class and then saved in the file.There are also search and arrange methods which can be accessed by Users class.
	-File format: Inside the files, each patient’s information is stored in same fashion:
	Personal information separated by commas (name, birthdate, and health card number and arrival time)
	Time of record 1: systolic, diastolic, temperature, heart rate, urgency level
	Time of record 1: symptoms
	Time of record 2: systolic, diastolic, temperature, heart rate, urgency level
	Time of record 2: symptoms
	……
If the patient was saved in the ‘seen by doctor’ file, there should also be an additional column of time and date when he/she was seen by the doctor in the first line. 
-Patient: the class is used to create a new patient object when a patient arrives at the ER. When a patient first arrives, this variable ‘Date and time seen by doctor’ is null. When the patient has been seen by the doctor, the date and time will be updated. Then this patient is deleted under the key ‘not seen by doctor’ and added to ‘seen by doctor’ in the Data class. Correspondingly, his/her records will be removed from ‘not seen by doctor’ text file to ‘seen by doctor’ text file. The symptoms and vital signs of the patient are stored in two maps, ordered by recording time. And the method ‘Calculate urgency level’ in the Patient class will generate the urgency level of a patient based on hospital policy.
-Users: an abstract class to provide search patient and order patient methods that multiple user classes can share. When the user wants to access the ordered patient list, the Users class will collaborate with Data class to arrange the patients under the key of ‘not seen by doctor’ in desired order. Also, the user can search a specific patient by input his/her health card number. This is again fulfilled by collaborating with the Data class.
-Nurse: a subclass of Users that has overriding search and order methods and unique add, update methods. When the nurse records vital signs and symptoms for the first time, the Nurse class collaborates with Patient class, VitalSigns class and Symptoms class and create a new map of vital signs and symptoms for this patient. After this, each time the nurse updates vital signs and symptoms, new keys (which should be the time of record) and values are added in the corresponding maps.
-Symptoms: a class used to record a patient’s symptoms in a map with time of record as keys and symptoms as values. Each time, the symptoms noticed and the time of record are recorded or updated via the Nurse and the Patient class.
-VitalSigns: a class used to record a patient’s vital signs in a map with time of record as keys and blood pressure (systolic and diastolic), temperature, heart rate as values. When a patient’s vital signs are determined, they are recorded or updated along with the time of record via the Nurse and the Patient class.
